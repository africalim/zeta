_include:
  - kubeconfig.yaml

opts:
  backend:
    select: kube
    kube:
      # is this still necessary?
      job_pod:
        memory:
          limit: 0
        cpu:
          request:
            0
      dask_cluster:
        num_workers: 1
        scheduler_pod:
          type: scheduler
          memory:
            limit: "3Gi"
          cpu:
            request:
              1
        worker_pod:
          memory:
            limit: 0
          cpu:
            request:
              0

first-gen:
  steps:
    kgb:
      assign:
        # required for workers to get the correct env vars
        config.opts.backend.kube.env.NUMBA_NUM_THREADS: '16'
        config.opts.backend.kube.env.LD_LIBRARY_PATH: '/usr/local/lib'
      backend:
        kube:
          enable: true
          job_pod:  # This is where the main application runs.
            type: thin
            memory:
              limit: "27Gi"
            cpu:
              request: 5  # > than half available
          dask_cluster:  # Set up the Dask cluster.
            enable: true
            num_workers: 2
            name: kgb-cluster
            threads_per_worker: 1
            worker_pod:
              type: pudgy
              memory:
                limit: "58Gi"
              cpu:
                request: 9
          always_pull_images: true
      params:
        solver.threads: 16
        dask.threads: 1
        dask.workers: 2
        dask.scheduler: distributed

    g_to_abs:
      backend:
        select: kube  # Required due to native override in recipe.

    phasecal:
      assign:
        # required for workers to get the correct env vars
        config.opts.backend.kube.env.NUMBA_NUM_THREADS: '16'
        config.opts.backend.kube.env.LD_LIBRARY_PATH: '/usr/local/lib'
      backend:
        kube:
          enable: true
          job_pod:  # This is where the main application runs.
            type: thin
            memory:
              limit: "27Gi"
            cpu:
              request: 5  # > than half available
          dask_cluster:  # Set up the Dask cluster.
            enable: true
            num_workers: 4
            name: phasecal-cluster
            threads_per_worker: 1
            worker_pod:
              type: pudgy
              memory:
                limit: "58Gi"
              cpu:
                request: 10
          always_pull_images: true
      params:
        solver.threads: 16
        dask.threads: 1
        dask.workers: 4
        dask.scheduler: distributed


    transfer:
      assign:
        # we need this so the workers get the right env vars
        config.opts.backend.kube.env.NUMBA_NUM_THREADS: '90'
        config.opts.backend.kube.env.NUMEXPR_NUM_THREADS: '90'
        config.opts.backend.kube.env.JAX_ENABLE_X64: 'True'
        config.opts.backend.kube.env.JAX_PLATFORMS: 'cpu'
        config.opts.backend.kube.env.LD_LIBRARY_PATH: '/usr/local/lib'
      backend:
        kube:
          enable: true
          job_pod:  # This is where the main application runs.
            type: thin
            memory:
              limit: "27Gi"
            cpu:
              request: 5  # > than half available
          dask_cluster:  # no Dask cluster.
            enable: true
            num_workers: 4
            name: transfer-cluster
            threads_per_worker: 6
            memory_limit: 0
            worker_pod:
              type: thin
              memory:
                limit: "58Gi"
              cpu:
                request: 14
          always_pull_images: true
      params:
        solver.threads: 1
        dask.threads: 6
        dask.workers: 4
        dask.scheduler: distributed
